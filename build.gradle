/* build.gradle */
plugins {
	id "maven"
	id "maven-publish"
	id "groovy"
    id "com.jfrog.bintray" version "1.8.4"
}
//apply plugin: 'groovy'
//apply plugin: 'java'

repositories {
    jcenter()
}

//============================================
group = "acme.groovy"
version = new Date().format("yyyyMMdd")

//sourceCompatibility = 1.7
//targetCompatibility = 1.7
//============================================


dependencies {
	//compile ()
	compileOnly (
		[group: "org.codehaus.groovy",   name: "groovy-all",         version: "2.4.12"],
	)
	testCompile (
		[group: "org.codehaus.groovy",   name: "groovy-all",         version: "2.4.12"],
		[group: "junit",                 name: "junit",              version: "4.11"],
		[group: "com.google.code.gson",  name: "gson",               version: "2.8.5"]
	)
}

compileJava {
	options.compilerArgs += ["-g:source,lines,vars", "-Xlint:unchecked"]
}

compileTestGroovy {
	options.compilerArgs += ["-g:source,lines,vars", "-Xlint:unchecked"]
}

test {
	minHeapSize = "256m"
	maxHeapSize = "256m"
}


//load / create default props
//new File("local.properties").with{f->
project.file("local.properties").with{f->
	new Properties().with{p->
		if(f.exists()){
			println "load $f"
			p.load(f.newInputStream())
		}else{
			println "create $f"
			p.brKey="bintray api key"
			p.brUser="bintray user"
			p.store(f.newOutputStream(), "private system properties")
		}
		System.getProperties().putAll(p)
	}
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = "javadoc"
    from javadoc.destinationDir
}

publishing {
    publications {
        MyPublication(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
        }
    }
}

bintray {
    user = System.getProperty("brUser") ?: "use `-DbrKey=...` parameter"
    key  = System.getProperty("brKey")  ?: "use `-DbrUser=...` parameter"
    publications = ["MyPublication"]
    pkg {
        repo     = "repo"
        name     = rootProject.name
        userOrg  = rootProject.group.tr('.','-')
        licenses = ["Apache-2.0"]
        vcsUrl   = "https://github.com/acme-groovy/acmejson.git"
		publicDownloadNumbers = true
		/*
		version {
			name = version
			desc = "plain http client optimized for groovy language"
			released  = new Date()
		}
		*/
    }
}

jar {
	manifest {
		attributes(
			//"Created-By"            : vendor,
			"Implementation-Title"  : "${rootProject.group}:${rootProject.name}",
			"Implementation-Version": "${rootProject.version}",
			"Implementation-URL"    : "https://github.com/acme-groovy/acmejson",
		)
	}
}

task all(dependsOn: [clean, build, javadocJar, sourcesJar, bintrayUpload]){
	build.mustRunAfter clean
	javadocJar.mustRunAfter build
	sourcesJar.mustRunAfter javadocJar
	bintrayUpload.mustRunAfter sourcesJar
}

